<map>
  <set
    designer="Head"
    information="Updated from the original.  Now with random incarnators, random goody radii, boundary visualization (66% of the time), no-spin teleporter, normal missiles, 6 lives."
    defaultLives="6"
  />
  <!-- Local variables -->
  <set
    startY    = "8"
    sin60     = "sin(60)"
    cos60     = "cos(60)"
    grenDelay = "250"
    numGren   = "7"
    missDelay = "250"
    numMiss   = "4"
    domeColor = '"rgba(255, 202, 0, 0.94)"'
  />

  <!-- Using enum makes sure all Goodies will be at the same radius (not eval'ed every time) -->
  <enum start="4+24*random" vars="grenRadius" />
  <enum start="20+28*random" vars="missRadius" />
  <enum start="0.1+200*round(0.16+random)" vars="domeYon" />  <!-- border visible about 66% of the time (for Seven) -->

  <SkyColor fill="#fffc41" frame="#ff7c00" />
  <!-- <GroundColor fill="#d6a800" />  214 168 0 original color, floor attempts to match this -->
  <GroundColor fill="#cca000" />  <!-- 204 160 0 -->
  <Sound y="50" sound="snArcticWind" isAmbient="true" loopCount="-1" volume="80" cx="30" cz="30" angle="225" />

  <Teleporter shape="0" win="1200" start="@winTeam"
     cx="0" cz="0" y="200" activeRange="500" />
  <Teleporter shape="0" group="@center" destGroup="@recenter"
     cx="0" cz="0" y="-startY" activeRange="500" deadRange="48" />
  <Teleporter shape="bspGroundStar" fill="#000000" speed="0" mask="0" group="@recenter"
     cx="0" cz="0" y="startY" angle="0" activeRange="0" spin="0" />
  <Hologram shape="bspGroundStar" fill="#000000"
     cx="0" cz="0" y="0.01" angle="0" />

  <!-- Small rotating stars -->
  <unique vars="mShow = @start" />
  <Base in="@start" out="mShow" />
  <Goody shape="bspGroundStar" scale="0.618" yon="500" sound="0" y="0.001" speed="1.2" grenades="0" start="mShow" out="mShow" fill="#000000" frame="#000000" cx="0" cz="0" angle="0" />
  <Goody shape="bspGroundStar" scale="0.618" yon="500" sound="0" y="startY+0.001" speed="-1.2" grenades="0" start="mShow" out="mShow" fill="#000000" frame="#000000" cx="0" cz="0" angle="45" />

  <!-- Upside down domes provides a floor that shows the extent of the level -->
  <Dome hasFloor="true" fill="domeColor" cx="0" cz="0" y="-0.001" r="50" roll="180" yon="domeYon" angle="0" />
  <Dome hasFloor="true" fill="domeColor" cx="0" cz="0" y="-0.003" r="50" roll="180" yon="domeYon" angle="7.5" />
  <Dome hasFloor="true" fill="domeColor" cx="0" cz="0" y="-0.005" r="50" roll="180" yon="domeYon" angle="15" />
  <Dome hasFloor="true" fill="domeColor" cx="0" cz="0" y="-0.006" r="50" roll="180" yon="domeYon" angle="22.5" />
  <Dome hasFloor="true" fill="domeColor" cx="0" cz="0" y="-0.004" r="50" roll="180" yon="domeYon" angle="30" />
  <Dome hasFloor="true" fill="domeColor" cx="0" cz="0" y="-0.002" r="50" roll="180" yon="domeYon" angle="37.5" />

  <!-- Grenades -->
  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="grenDelay" />
  <Goody shape="bspGrenade" y="mGoodyOffset" grenades="numGren * 1.1" start="mShow" out="mTaken" cx="0" cz="grenRadius" angle="180" />

  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="grenDelay" />
  <Goody shape="bspGrenade" y="mGoodyOffset" grenades="numGren * 1.2" start="mShow" out="mTaken" cx="sin60*grenRadius" cz="cos60*grenRadius" angle="120" />

  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="grenDelay" />
  <Goody shape="bspGrenade" y="mGoodyOffset" grenades="numGren * 1.3" start="mShow" out="mTaken" cx="-sin60*grenRadius" cz="cos60*grenRadius" angle="240" />

  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="grenDelay" />
  <Goody shape="bspGrenade" y="mGoodyOffset" grenades="numGren * 1.4" start="mShow" out="mTaken" cx="0" cz="-grenRadius" angle="0" />

  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="grenDelay" />
  <Goody shape="bspGrenade" y="mGoodyOffset" grenades="numGren * 1.5" start="mShow" out="mTaken" cx="-sin60*grenRadius" cz="-cos60*grenRadius" angle="300" />

  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="grenDelay" />
  <Goody shape="bspGrenade" y="mGoodyOffset" grenades="numGren * 1.6" start="mShow" out="mTaken" cx="sin60*grenRadius" cz="-cos60*grenRadius" angle="60" />


  <!-- Missiles -->
  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="missDelay" />
  <Goody shape="bspMissile" y="mGoodyOffset" missiles="numMiss" start="mShow" out="mTaken" fill="#0052ff" frame="#000000" cx="missRadius" cz="0" angle="90" />

  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="missDelay" />
  <Goody shape="bspMissile" y="mGoodyOffset" missiles="numMiss" start="mShow" out="mTaken" fill="#0052ff" frame="#000000" cx="cos60*missRadius" cz="sin60*missRadius" angle="150" />

  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="missDelay" />
  <Goody shape="bspMissile" y="mGoodyOffset" missiles="numMiss" start="mShow" out="mTaken" fill="#012ce4" frame="#000000" cx="-cos60*missRadius" cz="sin60*missRadius" angle="210" />

  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="missDelay" />
  <Goody shape="bspMissile" y="mGoodyOffset" missiles="numMiss" start="mShow" out="mTaken" fill="#0052ff" frame="#000000" cx="-missRadius" cz="0" angle="270" />

  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="missDelay" />
  <Goody shape="bspMissile" y="mGoodyOffset" missiles="numMiss" start="mShow" out="mTaken" fill="#0052ff" frame="#000000" cx="-cos60*missRadius" cz="-sin60*missRadius" angle="330" />

  <unique vars="mShow mTaken" />
  <And in="@start" out="mShow" />
  <Timer in="mTaken" out="mShow" wait="missDelay" />
  <Goody shape="bspMissile" y="mGoodyOffset" missiles="numMiss" start="mShow" out="mTaken" fill="#0052ff" frame="#000000" cx="cos60*missRadius" cz="-sin60*missRadius" angle="30" />

</map>
